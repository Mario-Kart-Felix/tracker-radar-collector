Software security researchers are increasingly engaging with Internet companies to hunt down vulnerabilities. Our bounty program gives a tip of the hat to these researchers and provides rewards of $30,000 or more for critical vulnerabilities.

You can find more information in our rules, scope, targets, and FAQ sections. You can also check the current rankings on the leaderboard.

Happy hacking!

Rules
Before you start
Check the list of domains that are in scope for the Bug Bounty program and the list of targets for useful information for getting started.
Check the list of bugs that have been classified as ineligible. Submissions which are ineligible will likely be closed as Not Applicable.
Check the GitHub Changelog for recently launched features.
Never attempt non-technical attacks such as social engineering, phishing, or physical attacks against our employees, users, or infrastructure.
When in doubt, contact us at bounty@github.com.
By participating in GitHub's Bug Bounty program (the "Program"), you acknowledge that you have read and agree to GitHub's Terms of Service as well as the following:

you're not participating from a country against which the United States has issued export sanctions or other trade restrictions, including Cuba, Iran, North Korea, Sudan, and Syria.
you're not currently a GitHub employee or contractor, were not a GitHub employee or contractor within six months prior to submission, and you did not collaborate on your submission with anyone who was.
your participation in the Program will not violate any law applicable to you, or disrupt or compromise any data that is not your own.
you are solely responsible for any applicable taxes, withholding or otherwise, arising from or relating to your participation in the Program, including from any bounty payments.
GitHub reserves the right to terminate or discontinue the Program at its discretion.
Only test for vulnerabilities on sites you know to be operated by GitHub and are in-scope. Some sites hosted on subdomains of GitHub.com are operated by third parties and should not be tested.
Legal safe harbor
Your research is covered by the GitHub Bug Bounty Program Legal Safe Harbor policy. In summary:

We consider security research and vulnerability disclosure activities conducted consistent with this policy as “authorized” conduct under the Computer Fraud and Abuse Act, the DMCA, and other applicable computer use laws such as Cal. Penal Code 502(c). We waive any potential DMCA claim against you for circumventing the technological measures we have used to protect the applications in this bug bounty program's scope.
We want you to responsibly disclose through our bug bounty program, and don't want researchers put in fear of legal consequences because of their good faith attempts to comply with our bug bounty policy. We cannot bind any third party, so do not assume this protection extends to any third party. If in doubt, ask us before engaging in any specific action you think might go outside the bounds of our policy.
Because both identifying and non-identifying information can put a researcher at risk, we limit what we share with third parties. We may provide non-identifying substantive information from your report to an affected third party, but only after notifying you and receiving a commitment that the third party will not pursue legal action against you. We will only share identifying information (name, email address, phone number, etc.) with a third party if you give your written permission.
If your security research as part of the bug bounty program violates certain restrictions in our site policies, the safe harbor terms permit a limited exemption.
Performing your research
Do not impact other users with your testing, this includes testing vulnerabilities in repositories or organizations you do not own. If you are attempting to find an authorization bypass, you must use accounts you own.
The following are never allowed and are ineligible for reward. We may suspend your GitHub account and ban your IP address for:

Performing distributed denial of service (DDoS) or other volumetric attacks
Spamming content
Large-scale vulnerability scanners, scrapers, or automated tools which produce excessive amounts of traffic.
Note: We do allow the use of automated tools so long as they do not produce excessive amounts of traffic. For example, running one nmap scan against one host is allowed, but sending 65,000 requests in two minutes using Burp Suite Intruder is excessive.
Researching denial-of-service attacks is allowed and eligible for rewards only if you follow these rules:

There are no limits for researching denial of service vulnerabilities against your own instance of GitHub Enterprise Server. We strongly recommend/prefer this method for researching denial of service issues.
If you choose to test on GitHub proper (i.e. https://github.com)
Research must be performed in organizations or repositories you own
Stop immediately if you believe you have affected the availability of our services. Don't worry about demonstrating the full impact of your vulnerability, GitHub's security team will be able to determine the impact.
Handling personally identifiable information (PII)
Personally identifying information (PII) includes:
legal and/or full names
names or usernames combined with other identifiers like phone numbers or email addresses
health or financial information (including insurance information, social security numbers, etc.)
information about political or religious affiliations
information about race, ethnicity, sexual orientation, gender, or other identifying information that could be used for discriminatory purposes
Do not intentionally access others' PII. If you suspect a service provides access to PII, limit queries to your own personal information.
Report the vulnerability immediately and do not attempt to access any other data. The GitHub Security team will assess the scope and impact of the PII exposure.
Limit the amount of data returned from services. For SQL injection, for example, limit the number of rows returned
You must delete all your local, stored, or cached copies of data containing PII as soon as possible. We may ask you to sign a certificate of deletion and confidentiality agreement regarding the exact information you accessed. This agreement will not affect your bounty reward.
We may ask you for the usernames and IP addresses used during your testing to assess the impact of the vulnerability
Reporting your vulnerability
Submissions must include written instructions for reproducing the vulnerability. Submissions without clear reproduction steps or which only include reproduction steps in video form may be ineligible for a reward.
When reporting vulnerabilities you must keep all information on HackerOne. Do not post information to video-sharing or pastebin sites. Videos and images can be uploaded directly via HackerOne.
For vulnerabilities involving personally identifiable information, please explain the kind of PII you believe is exposed and limit the amount of PII data included in your submissions. For textual information and screenshots, please only include redacted data in your submission.
Do not publicly disclose your submission until GitHub has evaluated the impact.
Receiving your award
All reward amounts are determined by our severity guidelines.
When duplicates occur, we only award the first report that was received (provided that it can be fully reproduced).
You are free to publish write-ups about your vulnerability and GitHub will not limit what you write. We may pay out your reward before the vulnerability is patched so we may ask that you delay publishing to keep other GitHub users safe.
Medium, high, and critical severity issues may be written up on the GitHub Bug Bounty site and included in our leaderboard. We don't currently post write-ups for low severity vulnerabilities.
GitHub is a CVE Numbering Authority (CNA) for GitHub Enterprise Server. Eligible Bug Bounty submissions that affect GitHub Enterprise Server may be assigned CVEs. These CVEs will be shared with submitters via HackerOne, included in bounty write-ups and listed in the GitHub Enterprise Server release notes.
You may prefer the reward go toward helping others. If you choose to do so, GitHub will donate your reward to an established 501(c)(3) charitable organization of your choice. GitHub will also match your donation - subject to our discretion. Any rewards that go unclaimed after 12 months will be donated to a charity of GitHub's choosing.
Scope
GitHub runs a number of services but only submissions under the following domains are eligible for rewards. Any GitHub-owned domains not listed below are not in-scope, not eligible for rewards and not covered by our legal safe harbor.

github.com
Our main domain hosting user-facing GitHub services.. All subdomains under github.com are in-scope except:

blog.github.com
community.github.com
email.enterprise.github.com
email.finance.github.com
email.staging.finance.github.com
email.support.github.com
email.verify.github.com
google7650dcf6146f04d8.github.com
k1._domainkey.github.com
k1._domainkey.mcmail.github.com
mcmail.github.com
resources.github.com
*.resources.github.com
sgmail.github.com
*.sgmail.github.com
shop.github.com
smtp.github.com
*.smtp.github.com
githubassets.com
Our domain for hosting static assets.. All subdomains under githubassets.com are in-scope

githubusercontent.com
Our domain for hosting and rendering users' data.. All subdomains under githubusercontent.com are in-scope

githubapp.com
Our domain for hosting employee-facing services.. All subdomains under githubapp.com are in-scope except:

atom-io.githubapp.com
atom-io-staging.githubapp.com
email.enterprise-staging.githubapp.com
email.haystack.githubapp.com
reply.githubapp.com
github.net
Our domain for hosting GitHub's internal production services. Many of these services are not accessible from outside our internal network.. All subdomains under github.net are in-scope

semmle.com
Our main domain for Semmle and LGTM services. All subdomains under semmle.com are in-scope except:

dev.semmle.com
git.semmle.com
jira.semmle.com
wiki.semmle.com
semmle.net
Our domain for non-production Semmle services. All subdomains under semmle.net are in-scope

downloads.lgtm.com
Our domain for serving LGTM downloads.. All subdomains under downloads.lgtm.com are in-scope

lgtm-com.pentesting.semmle.net
An instance of LGTM especially for Bug Bounty research.. All subdomains under lgtm-com.pentesting.semmle.net are in-scope

backend-dot-lgtm-penetration-testing.appspot.com
An instance of LGTM's backend used for triggering automated tasks.. All subdomains under backend-dot-lgtm-penetration-testing.appspot.com are in-scope

Severity Guidelines
All bounty submissions are rated by GitHub using a purposefully simple scale. Each vulnerability is unique but the following is a rough guideline we use internally for rating and rewarding submissions:

Critical: $20,000 - $30,000
Critical severity issues present a direct and immediate risk to a broad array of our users or to GitHub itself. They often affect relatively low-level/foundational components in one of our application stacks or infrastructure. For example:

arbitrary code/command execution on a GitHub server in our production network.
arbitrary SQL queries on the GitHub production database.
bypassing the GitHub login process, either password or 2FA.
access to sensitive production user data or access to internal production systems.
accessing another user's data in the GitHub Actions service.
The upper bound for critical vulnerabilities, $30,000, is only a guideline and GitHub may reward higher amounts for exceptional reports.

High: $10,000 - $20,000
High severity issues allow an attacker to read or modify highly sensitive data that they are not authorized to access. They are generally more narrow in scope than critical issues, though they may still grant an attacker extensive access. For example:

injecting attacker controlled content into GitHub.com (XSS) which bypasses CSP.
bypassing authorization logic to grant a repository collaborator more access than intended.
discovering sensitive user or GitHub data in a publicly exposed resource, such as an S3 bucket.
gaining access to a non-critical resource that only GitHub employees should be able to reach.
using the GitHub Actions repo-scoped GitHub token to access high-risk private content outside of that repository.
code execution in a client app (GitHub Desktop, GitHub Mobile or GitHub CLI) that requires no user interaction, such as arbitrary code execution upon repo clone or via a protocol handler
Medium: $4,000 - $10,000
Medium severity issues allow an attacker to read or modify limited amounts of data that they are not authorized to access. They generally grant access to less sensitive information than high severity issues. For example:

disclosing the title of issues in private repositories which should be be inaccessible.
injecting attacker controlled content into GitHub.com (XSS) but not bypassing CSP or executing sensitive actions with another user's session.
bypassing CSRF validation for low risk actions, such as starring a repository or unsubscribing from a mailing list.
escaping the LGTM worker sandbox to access other user's data or private networked resources
code execution in a client app (GitHub Desktop, GitHub Mobile or GitHub CLI) that requires minimal, expected user interaction, such as performing actions on a repository that a user would not expect to lead to code execution.
Low: $617 - $2,000
Low severity issues allow an attacker to access extremely limited amounts of data. They may violate an expectation for how something is intended to work, but it allows nearly no escalation of privilege or ability to trigger unintended behavior by an attacker. For example:

signing up arbitrary users for access to an "early access feature" without their consent.
creating an issue comment that bypasses our image proxying filter by providing a malformed URL.
triggering verbose or debug error pages without proof of exploitability or obtaining sensitive information.
triggering application exceptions that could affect many GitHub users.
triggering XSS or CSRF vulnerabilities in LGTM
injecting JavaScript event handlers into links, etc, which are mitigated by CSP on GitHub.com
Last updated on January 14, 2021.View changes
Scopes
In Scope
Domain	
GitHub.com
GitHub.com is our main web site. It is our most intricate application with a number of user inputs and access methods. GitHub.com is built on Ruby on Rails and leverages a number of Open Source technologies.

Rewards range from $555 up to $20,000 and are determined at our discretion based on a number of factors. For example, if you find a reflected XSS that is only possible in Opera, and Opera is <2% of our traffic, then the severity and reward will be lower. But a persistent XSS that works in Chrome, at >60% of our traffic, will earn a much larger reward.

You can find the app at https://github.com.

Critical
Eligible
Domain	
api.github.com
The GitHub API is used by thousands of developers and applications to programatically interact with GitHub data and services. Because so much of the GitHub.com functionality is exposed in the API, security has always been a high priority.

Rewards range from $555 up to $20,000 and are determined at our discretion based on a number of factors.

You can find the app at https://api.github.com and can find the API documentation at https://developer.github.com.

Critical
Eligible
Domain	
gist.github.com
Gist is one of the first products launched by GitHub after GitHub.com. It is a service for sharing snippets of code or other text content. Gist is built on Ruby on Rails and leverages a number of Open Source technologies.

Rewards range from $555 up to $20,000 and are determined at our discretion based on a number of factors. For example, if you find a reflected XSS that is only possible in Opera, and Opera is <2% of our traffic, then the severity and reward will be lower. But a persistent XSS that works in Chrome, at >60% of our traffic, will earn a much larger reward.

You can find the app at https://gist.github.com.

Critical
Eligible
Domain	
classroom.github.com
Critical
Eligible
Domain	
*.githubapp.com
Subdomains under *.githubapp.com provide a number of internal services to GitHub employees. Not all subdomains are in-scope

Critical
Eligible
Domain	
*.github.net
Subdomains under *.github.net run services for our internal production network. Many of these services are not accessible from outside our internal network. Not all subdomains are in-scope

Critical
Eligible
Domain	
education.github.com
GitHub Education offers a variety of tools to help educators and researchers work more effectively inside and outside of the classroom. More details are available at https://education.github.com/. GitHub Classroom is open-source

Critical
Eligible
Domain	
lab.github.com
Get the skills you need without leaving GitHub. GitHub Learning Lab takes you through a series of fun and practical projects, sharing helpful feedback along the way.

Critical
Eligible
Domain	
jobs.github.com
GitHub Jobs is a great place to attract the best technical talent for your company’s open software development positions

Critical
Eligible
Domain	
semmle.net
Our domain for non-production Semmle services. All subdomains under semmle.net are in-scope.

Critical
Eligible
Domain	
semmle.com
Our main domain for Semmle and LGTM services. All subdomains under semmle.com are in-scope except:

dev.semmle.com
git.semmle.com
jira.semmle.com
wiki.semmle.com
Critical
Eligible
Other	
GitHub Enterprise Cloud
GitHub Enterprise Cloud is the cloud-hosted version of GitHub Enterprise. It is designed for teams who want advanced authentication and permissions without managing infrastructure. More information about GitHub Enterprise Cloud is available at https://github.com/enterprise

Critical
Eligible
Other	
GitHub Pages
GitHub Pages is our static site hosting service designed to host your personal, organization, or project pages directly from a GitHub repository. It uses the Jekyll static site generator and officially supported themes are are developed in the pages-themes organization. GitHub Pages support custom domains and can be secured with HTTPS. Eligible submissions include:

Executing arbitrary code during the build process, either via a custom Jekyll theme or vulnerabilities in the command-line Git tools when cloning or checking-out repositories
Reading arbitrary files during the build process which discloses sensitive information, for example by misusing path traversal or symbolic links in a custom Jekyll theme
Individual GitHub Pages sites hosted under *.github.io are out-of-scope.

Critical
Eligible
Other	
GitHub Production Credentials
GitHub, Inc. uses a mix of our own physical infrastructure, cloud platforms and third-party services to keep everything running smoothly. Keeping credentials and access tokens secure for these resources is paramount to the security of our employees and users.

Credentials allowing access to cloud services, package managers and other resources used by GitHub, Inc employees
Credentials accidentally made public in repositories which allow access to GitHub, Inc resources. This does not include credentials exposed by our users and credentials which do not allow access to GitHub, Inc resources.
Credentials exposed by third-party services which allow access to GitHub, Inc resources
Please review our guidance for handling PII before investigating credentials allowing access to GitHub, Inc resources. The reward amount is based on the impact of the leaked credential which will be determined by the GitHub Security team.

Critical
Eligible
Other	
Dependabot
Dependabot powers GitHub's automated security fixes. This feature allows GitHub users to automatically update vulnerable dependencies. The core logic of Dependabot is open-source and an overview of the architecture is available.

Execution environment breakout attacks, providing access to private networked resources or other users' data
Security issues in dependabot-core
Critical
Eligible
Other	
LGTM
LGTM is a code analysis platform for development teams to identify vulnerabilities early and prevent them from reaching production. It uses CodeQL which works by retrieving source code from version control systems, building it with custom tooling, and creating analysis results.

LGTM uses Docker containers to isolate the build and analysis environment from the rest of the infrastructure. By nature this environment permits arbitrary code execution by any registered user, so the quality of isolation is a critical part of the security model. The public site includes two user types (user and admin user) as well as anonymous access.

lgtm-com.pentesting.semmle.net is a dedicated instance of LGTM for your research.

backend-dot-lgtm-penetration-testing.appspot.com is used for triggering automated tasks from other parts of the LGTM system. It does not provide a user interface.

downloads.lgtm.com

Critical
Eligible
Other	
GitHub for mobile
Bring GitHub collaboration tools to your small screens with GitHub for mobile.

Critical
Eligible
Other	
GitHub CSP
While content-injection vulnerabilities are already in-scope for our GitHub.com bounty, we also accept bounty reports for novel CSP bypasses affecting GitHub.com, even if they do not include a content-injection vulnerability. Using an intercepting proxy or your browser's developer tools, experiment with injecting content into the DOM. See if you can execute arbitrary JavaScript or exfiltrate sensitive page contents such as CSRF tokens. Reports of other previously-unknown impacts from content-injection will also be considered.

Previously identified attacks are not eligible for reward (we've put a lot of thought into CSP bypasses already). You can find a discussion of known attacks and our attempts to mitigate them here. Attacks against CSP features not used on GitHub.com, such as script nonces, are not eligible for reward. Vulnerabilities resulting from injection in implausible locations, such as within an element that doesn't contain user-content, are not eligible for reward. Rewards are determined at our discretion: if you think you've found something cool and novel, report it!

High
Eligible
Hardware/IoT	
GitHub Enterprise Server
GitHub Enterprise Server is the on-premise version of GitHub Enterprise. GitHub Enterprise Server shares a code-base with GitHub.com, is built on Ruby on Rails and leverages a number of open source technologies. GitHub Enterprise Server adds a number of features for enterprise infrastructures, including additional authentication backends and clustering options.

Below is a subset of features unique to GitHub Enterprise that might be interesting to investigate.

Bypassing instance-wide authentication, also known as private mode
External authentication backends including CAS, LDAP, and SAML
In-app administration of the instance using a site administrator control panel
User, organization, and repository migration
Web-based management console and SSH access to configure and update the instance
Pre-receive hook scripts
GitHub Connect allows users to share specific features and workflows between your GitHub Enterprise Server instance and a GitHub.com organization on GitHub Enterprise Cloud.
See our documentation for a list of services typically open on an instance.
You can request a trial of GitHub Enterprise Server for security testing at https://enterprise.github.com/bounty.

Critical
Eligible
Executable	
GitHub Desktop
GitHub Desktop is an open-source Electron-based app for working with your GitHub.com or GitHub Enterprise account. Only the following vulnerabilities are eligible for reward:

Remote code execution via protocol handlers such as x-github-client://
Code execution without user interaction when cloning or fetching malicious repositories
Critical
Eligible
Executable	
GitHub CLI
GitHub CLI is an open source command line tool for working with your GitHub.com account. It is built with Golang, and performs several GitHub.com commands from your terminal, such as viewing, commenting and performing other actions on issues and PRs.

Critical
Eligible
Out of Scope
Domain	enterprise.github.com
enterprise.github.com is commonly confused with the GitHub Enterprise Server product which is an on-premise instance of GitHub.

Domain	*.github.io
Individual sites which are hosted on GitHub Pages are out-of-scope.

Domain	git.io
The git.io URL shortener is out-of-scope.

Domain	spectrum.chat
Spectrum is currently out-of-scope.

Domain	github.blog
github.blog is out-of-scope.

Domain	education.github.com/forum
The GitHub Education Community forum is not in-scope and ineligible for rewards.

Domain	blog.github.com
The GitHub Blog is not in-scope and ineligible for rewards.

Domain	community.github.com
The GitHub Community forum is not in-scope and ineligible for rewards.

Domain	shop.github.com
The GitHub Shop is not in-scope and ineligible for rewards.

Executable	Atom
https://atom.io

Executable	Electron
Electron vulnerabilities which do not directly affect GitHub Desktop are out-of-scope and should be reported to the Electron developers.

Executable	GitHub Classroom Assistant
The GitHub Classroom Assistant application is currently out-of-scope.